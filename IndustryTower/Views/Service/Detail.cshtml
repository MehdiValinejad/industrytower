@model IndustryTower.Models.Service
@{
    ViewBag.Title = Model.CultureServiceName + "-" + Model.company.CultureCoName;
    var srid = EncryptionHelper.Protect(Model.serviceID);
}

@section head{
    <meta name="description" content="@Model.CultureAbout">
    <meta name="keywords" content="@String.Join(",", Model.categories.Select(d=>d.CultureCatName))">
}

<div class="row dir">
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @Resource.relatedCategories
                    </div>
                    <div class="panel-body">
                        @Html.AjaxPrtialLoader(Url.Action("RelatedCategories", "Category", new { SrId = Model.serviceID }))
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @Resource.relatedProducts
                    </div>
                    <div class="panel-body">
                        @Html.AjaxPrtialLoader(Url.Action("RelatedProducts", "Product", new { SrId = Model.serviceID }))
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @Resource.relatedServices
                    </div>
                    <div class="panel-body">
                        @Html.AjaxPrtialLoader(Url.Action("RelatedServices", "Service", new { SrId = Model.serviceID }))
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-5">
                @Html.ProfilePic(company: Model.company)

            </div>
            <div class="col-md-7">

                @if (Model.company.Admins.Any(s => AuthorizationHelper.isRelevant(s.UserId)))
                {
                    <div class="pull-left">
                        @Html.ModifyIcons("Edit", "Delete", "Service", new { SrId = srid, SrName = StringHelper.URLName(Model.CultureServiceName) }, editAjax: false, deleteAjax: false)
                    </div>
                }
                
                <h3>
                    @Html.ActionLink(Model.company.CultureCoName, "CProfile", "Company", new { CoId = Model.company.coID, CoName = StringHelper.URLName(Model.company.CultureCoName) })
                </h3>
                <h1>
                    @Html.DisplayFor(model => model.CultureServiceName)
                </h1>


                <ul id="productLike" class="nav nav-pills nav-stacked">
                    @{Html.RenderAction("Like", "Like", new { model = new IndustryTower.ViewModels.likeVars { elemId = Model.serviceID, typ = IndustryTower.ViewModels.LikeType.LikeService } });}
                </ul>
            </div>
        </div>

        <div class="row margin-top-bot-md">
            @if (Model.image != null)
            {
                Html.RenderAction("FileSlideshow", "Home", new { folder = "Service", fileNamesString = Model.image });
            }
            else
            {
                Html.ProfilePic(service: Model);
            }
            <div class="col-md-12">
               @if (Model.document != null)
               {
                   Html.RenderAction("FileList", "Home", new { folder = "Service", fileNamesString = Model.document });
               }
            </div>
        </div>


        <div class="row dir">
                <table class="table">
                    @*<thead>
                        <tr>
                            <th>ddddd</th>
                            <th>vcvvv</th>
                        </tr>
                    </thead>*@
                    
                    <tbody>
                        
                        <tr>
                            <td class="no-wrap">@Html.DisplayNameFor(model => model.CultureBrandName)</td>
                            <td>@Html.DisplayFor(model => model.CultureBrandName)</td>
                        </tr>
                        <tr>
                            <td class="no-wrap">@Html.DisplayNameFor(model => model.serviceCountryID)</td>
                            <td>@Html.DisplayFor(model => model.serviceCountry.CultureStateName)</td>
                        </tr>
                        <tr>
                            <td class="no-wrap">@Html.DisplayNameFor(model => model.CultureAbout)</td>
                            <td>@Html.DisplayFor(model => model.CultureAbout)</td>
                        </tr>
                        <tr>
                            <td colspan="3" class="bottom-border-blue text-center"><strong>@Resource.support</strong></td>
                        </tr>
                        <tr>
                            <td class="no-wrap">@Html.DisplayNameFor(model => model.afterSale)</td>
                            <td>@Html.DisplayFor(model => model.afterSale)</td>
                        </tr>
                        <tr>
                            <td class="no-wrap">@Html.DisplayNameFor(model => model.serviceEra)</td>
                            <td>@Html.DisplayFor(model => model.serviceEra)</td>
                        </tr>
                        <tr>
                            <td colspan="3" class="bottom-border-blue text-center"><strong>@Resource.economic</strong></td>
                        </tr>
                        <tr>
                            <td class="no-wrap">@Html.DisplayNameFor(model => model.price)</td>
                            <td>@Html.DisplayFor(model => model.price)</td>
                        </tr>
                    </tbody>
                </table>
        </div>
        <div id="productComments" class="bg-default col-md-12">
            @{
                var se = new MvcSerializer();
                var mod = new IndustryTower.ViewModels.commentVars
                {
                    elemId = Model.serviceID ,
                    typ = IndustryTower.ViewModels.CommentType.CommentService
                };
                var tt = se.Serialize(mod, SerializationMode.Plaintext);
            }
            @Html.AjaxPrtialLoader(Url.Action("Comments", "Comment", new { model = tt }))
        </div>
    </div>
</div>








    @section scripts{
@Scripts.Render("~/bundles/Social")
@Scripts.Render("~/bundles/SlideShow")
<script>
    $(document).ready(function () {
        SlideShowArrowKeys();
    })
</script>

    }
